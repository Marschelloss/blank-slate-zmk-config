/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "mouse.dtsi"

#define QWERTY_BASE 1
#define TBLE_MIT 1

#define NAV_L 1
#define NUM_L 2
#define SYM_L 3
#define GME_L 4
#define GNM_L 5

&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,matrix_transform = &mit_transform;
    };

    behaviors {
        ltp: layer_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        lhp: layer_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    macros {
        mc_alfred: mc_alfred {
            label = "mc_alfred";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp SPACE>
                , <&macro_release &kp LGUI>
            ;
        };
    };

    combos {
           compatible = "zmk,combos";
           combo_esc {
                timeout-ms = <50>;
                key-positions = <14 15>;
                bindings = <&kp ESC>;
                layers = <0 1 2 3>;
           };
           combo_ret {
                timeout-ms = <50>;
                key-positions = <20 21>;
                bindings = <&kp RET>;
           };
    };
    
    tap_dances {
        shifty: shift_caps_word {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_SHIFTY";
        #binding-cells = <0>;
        tapping-term-ms = <150>;
        bindings = <&kp LSHFT>, <&caps_word>;
        };
    };

    cond_layers {
        compatible = "zmk,conditional-layers";
        tri {
            if-layers = <NUM_L NAV_L>;
            then-layer = <SYM_L>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
#ifdef QWERTY_BASE
 &kp Q      &kp W      &kp E       &kp R          &kp T      &to 4          &trans      &kp Y            &kp U          &kp I       &kp O      &kp P
 &kp A      &kp S      &kp D       &kp F          &kp G      &trans         &trans      &kp H            &kp J          &kp K       &kp L      &kp QUOT
 &kp Z      &kp X      &kp C       &kp V          &kp B      &trans         &trans      &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
#else
 &kp ESC    &kp Q      &kp W      &kp F       &kp P          &kp B          &kp J            &kp L          &kp U       &kp Y      &kp QUOT      &kp BKSP
 &kp TAB    &kp A      &kp R      &kp S       &kp T          &kp G          &kp M            &kp N          &kp E       &kp I      &kp O         &kp QUOT
 &kp LSHFT  &kp Z      &kp X      &kp C       &kp D          &kp V          &kp K            &kp H          &kp COMMA   &kp DOT    &kp SEMI      &kp RET
#endif
 U_BTN1     U_BTN2     U_BTN3     U_WH_D         &ltp NAV_L SPACE          &lhp NUM_L BKSP    &shifty      U_MS_L      U_MS_D  U_MS_U      U_MS_R
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&trans     &trans       &mc_alfred   &trans      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &trans
&sk LGUI   &sk LALT     &sk LCTRL    &sk LSHIFT  &kp TAB         &trans       &trans     &kp LEFT       &kp DOWN    &kp UP     &kp RIGHT  &trans
&trans     &trans       &trans       &trans      &trans          &trans       &trans     &kp HOME       &kp PG_DN   &kp PG_UP  &kp END    &trans
&trans     &trans       &trans       &trans      &trans          &trans       &trans     &trans         &trans      &trans     &trans
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp N5     &kp N6     &kp N7     &kp N8      &kp EQUAL       &trans       &trans     &kp UNDER      &kp LBKT    &kp RBKT   &kp LBRC   &kp RBRC
&kp N1     &kp N2     &kp N3     &kp N4      &kp PLUS        &trans       &trans     &kp LEFT       &kp DOWN    &kp UP     &kp RIGHT  &kp MINUS
&kp BSLH   &kp GRAVE  &kp N9     &kp N0      &trans          &trans       &trans     &trans         &kp COLON   &kp COMMA  &kp DOT    &kp SEMI
&trans     &trans     &trans     &trans      &trans                 &trans           &trans         &trans      &trans     &trans     &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&kp F5     &kp F6     &kp F7     &kp F8      &trans       &trans       &trans     &bt BT_CLR     &kp C_PREV   &kp C_PP     &kp C_NEXT &kp C_MUTE
&kp F1     &kp F2     &kp F3     &kp F4      &trans       &trans       &trans     &out OUT_USB   &sk RSHIFT   &sk RCTRL    &sk RALT   &sk RGUI
&kp F9     &kp F10    &kp F11    &kp F12     &trans       &trans       &trans     &out OUT_BLE   &bt BT(0)    &bt BT(1)    &bt BT(2)  &bt BT(3)
&trans     &trans     &trans     &trans      &trans                 &trans        &bootloader    &trans       &trans       &trans     &trans
            >;
        };

        gme_layer {
            label = "Gme";
            bindings = <
 &kp TAB    &kp Q      &kp W      &kp E       &kp R          &kp T          &to 0       &kp Y            &kp U          &kp I       &kp O      &kp P
 &kp LCTRL  &kp A      &kp S      &kp D       &kp F          &kp G          &kp BKSP    &kp H            &kp J          &kp K       &kp L      &kp QUOT
 &kp LALT   &kp Z      &kp X      &kp C       &kp V          &kp B          &none       &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
 &kp ESC    &kp T      &kp B      &mo GNM_L   &kp SPACE              &kp LSHIFT    &none          &none        &none        &none     &none
            >;
        };

        gnm_layer {
            label = "Gnm";
            bindings = <
&kp N5     &kp N6     &kp N7     &kp N8      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &trans
&kp N1     &kp N2     &kp N3     &kp N4      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &trans
&trans     &trans     &kp N9     &kp N0      &trans          &trans       &trans     &trans         &trans      &trans     &trans     &trans
&trans     &trans     &trans     &trans      &trans                 &trans           &trans         &trans      &trans     &trans     &trans
            >;
        };
    };
};

